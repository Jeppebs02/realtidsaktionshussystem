@using AuctionHouse.ClassLibrary.Interfaces
@inject IWalletAccess WalletAcces

@{
	var userName = AuctionHouse.ClassLibrary.Stubs.AuctionTestData.stubUser.UserName;
    var Wallet = WalletAcces.GetWalletForUser(userName);
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - AuctionHouse.WebSite</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/AuctionHouse.WebSite.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">

                <a class="navbar-brand" asp-area="" asp-page="/Index">AuctionHouse.WebSite</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Privacy">Privacy</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Auction/Create/Index">Create Auction</a>
                        </li>
                    </ul>
                        <!-- Transfer funds button -->
                    <div>
                        <button class="btn btn-outline-primary ms-3"
                                data-bs-toggle="modal" data-bs-target="#depositModal">
                            Add Funds
                        </button>
                    </div>

                    <!-- Deposit modal -->
                    <div class="modal fade" id="depositModal" tabindex="-1" aria-hidden="true">
                        <div class="modal-dialog">
                            <form id="depositForm" class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Add funds to wallet</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                </div>

                                <div class="modal-body">
                                    <label for="amount" class="form-label">Amount (DKK)</label>
                                    <input type="number" min="1" step="0.01"
                                           class="form-control" id="amount" required />
                                    <div class="invalid-feedback">Amount must be positive</div>
                                </div>

                                <div class="modal-footer">
                                    <button type="submit" class="btn btn-primary">Add</button>
                                </div>
                            </form>
                        </div>
                    </div>

                    <!-- Login Modal -->
                    <div class="modal fade" id="loginModal" tabindex="-1" aria-labelledby="loginModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <form id="loginForm" class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="loginModalLabel">User Login</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>

                                <div class="modal-body">
                                    <div class="mb-3">
                                        <label for="username" class="form-label">Username</label>
                                        <input type="text" class="form-control" id="username" name="username" required />
                                    </div>

                                    <div class="mb-3">
                                        <label for="password" class="form-label">Password</label>
                                        <input type="password" class="form-control" id="password" name="password" required />
                                    </div>
                                </div>

                                <div class="modal-footer">
                                    <button type="submit" class="btn btn-primary">Log In</button>
                                </div>
                            </form>
                        </div>
                    </div>

                    <!-- Wallet info to the right -->
                    <div class="navbar-text fw-semibold">
                        💰 Available: <span id="availLbl" class="text-success">@Wallet.GetAvailableBalance() DKK</span> |
                        🔒 Reserved:  <span id="resLbl" class="text-danger">@Wallet.ReservedBalance DKK</span>
                    </div>

                    <!--Login button-->
                    <div class="d-flex align-items-center ms-3">
                        <button class="btn btn-outline-success" data-bs-toggle="modal" data-bs-target="#loginModal">
                            Log In
                        </button>
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - AuctionHouse.WebSite - <a asp-area="" asp-page="/Privacy">Privacy</a>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        (() => {
            const form   = document.getElementById('depositForm');
            const input  = document.getElementById('amount');
            const avail  = document.getElementById('availLbl');
            const reserv = document.getElementById('resLbl');
            const user   = '@userName';                            // Razor variable

            form.addEventListener('submit', async e => {
                e.preventDefault();
                const amt = parseFloat(input.value);
                if (amt <= 0) { input.classList.add('is-invalid'); return; }

                const resp = await fetch('/wallet/deposit', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ username: user, amount: amt })
                });

                if (!resp.ok) { alert(await resp.text()); return; }
                
                const wallet = await resp.json();        // { available, reserved }

                avail.textContent  = wallet.availableBalance.toFixed(2);
                reserv.textContent = wallet.reservedBalance.toFixed(2);

                bootstrap.Modal.getInstance(
                    document.getElementById('depositModal')).hide();
                input.value = '';
            });
        })();

            // Login form script
                (() => {
            const loginForm = document.getElementById('loginForm');
            loginForm.addEventListener('submit', async e => {
                e.preventDefault();
                const username = document.getElementById('username').value.trim();
                const password = document.getElementById('password').value.trim();

                if (!username || !password) {
                    alert('Please enter both username and password.');
                    return;
                }

                // For now just show an alert
                alert(`Logging in with\nUsername: ${username}\nPassword: ${password}`);

                // TODO WebAPI logic

                // Close modal
                bootstrap.Modal.getInstance(document.getElementById('loginModal')).hide();

                // Clear form
                loginForm.reset();
            });
        })();

    </script>


    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>